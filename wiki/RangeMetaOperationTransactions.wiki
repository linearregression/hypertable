#summary Design of range meta-operation transactions
#labels Phase-Design

== Introduction ==

Ranges are assigned to !RangeServers via CREATE TABLE, Range splits and Range moves.  To ensure that Ranges get assigned to a !RangeServer and that a Range doesn't accidentally get double assigned, we've decided to implement range meta-operation transactions.  This document describes the design of this mechanism.

To support support range meta-operation transactions, we've introduced two commit logs:

  # RSML - !RangeServer Meta Log
  # MML - Master Meta Log

These logs are where all meta operations related to Ranges get recorded for the !RangeServers and Master, respectively.

== Range Split ==

=== Originating !RangeServer ===

  * Decide to split range
  * Create a split log and append SPLIT_START entry to RSML (include split log location)
  * Atomically obtain split timestamp and install split log
  * Do major compaction
  * Quiesce updates
  * Close split log
  * Update METADATA for old range 
  * Append SPLIT_SHRUNK to RSML
  * Shrink cell cache
  * Shrink view onto cell stores
  * Notify Master of split
  * Upon receiving Error::OK response from Master write SPLIT_DONE entry in RSML

=== Master ===

=== Receiving !RangeServer ===

== Range Move ==

== Create Table ==