
TODO:
- Add compression ratio field in CellStoreV0 trailer
- Add support for TSV files
- Add header to load data infile format to specify with or without timestamps
- Add delete_row, delete_cell, etc. to Mutator
- Add DropTable command to RangeServer
- Refactor so that schema can get updated on change

- Add comma separating the column families in the ACCESS GROUP clause
- Add regression for HQL
- Add scanner reaper to RangeServer
- Add range merging
- Get rid of directly written 'packed' commit log header in favor of a serialized one
- Add destroy_scanner method to RangeServer
- Add logic to prevent root METADATA range from splitting
- Add inMemory mode
- Figure out a solution to the problem of an update timing out
- Range constructor should throw exceptions
- clientTimestamp value does not appear to be used in RangeServer::update
- Add global (timeout, workers, reactors, etc.) to config file 
- Make sure LogDir for root METADATA range gets written somewhere
- Fix bus error when you issue the following select statement after an initial load:
  select * from Test1 where row >= 'n' && row < 'm';
- Can get rid of m_blocksize in CellStoreV0 and just use the one in m_trailer

DONE:
- Figure out get_timestamp stuff (see Merge scanner) is it less than, less than or equal to???
- Make sure ':' character cannot be specified in column family name
- Clean up timestamp clause in SELECT
- Add INSERT command to Hql
- Add blocksize attribute to AccessGroup schema and hook it up with CellStore
- Fix excessive seek problem during major/merging compaction (added CellStoreScannerV0 readahead)
- Improve get_split_keys in Range class
- Get METADATA range split working
- Make sure updates are sent sorted in ascending order of timestamp (for same row)
- Add PAUSE command to hypertable (to facilitate testing)
- Get scan time interval working
- Add auto-assigned timestamps
- Change RangeServer::update to do a single write to the commit log instead of
  once for every range being updated.

-------------------

INSERT INTO Test1 VALUES ("foo", "apple:http://www.google.com/", "the cow jumped over the moon"), ("bar", "banana:htt://www.yahoo.com", "the dog jumped over the moon");

INSERT INTO Test1 VALUES ('2007-12-13 08:20:34', "foo", "apple:http://www.google.com/", "the cow jumped over the moon"), ('2007-12-13 08:20:36', "bar", "banana:htt://www.yahoo.com", "the dog jumped over the moon");


DELETE from [table name] where row = 'row-key' [&& column = 'column-key'] [&& timestamp = 'timestamp'];





